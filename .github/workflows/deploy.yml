name: Build & Deploy

# Controls when the action will run
on:

  # Trigger the workflow on all pushes, except on tag creation
  push:
    branches:
    - '**'
    tags-ignore:
    - '**'

  # Allow workflow to be dispatched on demand
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout 🛎️
      uses: actions/checkout@v3

    - name: Node.js 🔨
      uses: actions/setup-node@v3
      with:
        node-version: 16

    - name: Cache 💾
      uses: actions/cache@v3
      env:
        cache-name: cache-npm
      with:
        path: |
          ~/.npm
          ~/.cache
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

    - name: Install 📦
      run: npm ci --legacy-peer-deps

    - name: Setup 📢
      env:
        GOOGLE_MAPS_API_KEY: ${{ secrets.GOOGLE_MAPS_API_KEY }}
        GOOGLE_ANALYTICS_ID: ${{ secrets.GOOGLE_ANALYTICS_ID }}
        OBJECT2VR_PLAYER: ${{ secrets.OBJECT2VR_PLAYER }}
      run: |
        echo GOOGLE_MAPS_API_KEY=$GOOGLE_MAPS_API_KEY > .env
        echo GOOGLE_ANALYTICS_ID=$GOOGLE_ANALYTICS_ID >> .env
        echo OBJECT2VR_PLAYER=$OBJECT2VR_PLAYER >> .env

    - name: Test ✅
      run: npm run ci-test

    - name: Summary 📝
      if: always()
      run: |
        cat JEST_RESULTS.md >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        cat CYPRESS_RESULTS.md >> $GITHUB_STEP_SUMMARY

    - name: Configure 🔧
      if: github.ref == 'refs/heads/main'
      uses: actions/configure-pages@v2

    - name: Build ⚙️
      if: github.ref == 'refs/heads/main'
      run: npm run build

    - name: Upload ⬆️
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-pages-artifact@v1
      with:
        path: dist/

  deploy:
    name: Deploy
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy 🚀
        id: deployment
        uses: actions/deploy-pages@v1
